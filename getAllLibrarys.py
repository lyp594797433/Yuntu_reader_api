# coding: utf-8import requests,json,timedef call_rest_api(API_URL, req_type, data_rtn=None, header=True, get_err_msg=True, token=None, timeout=None):    retry_num = 1    retry_interval_time = 10    cnt = 0    while cnt < retry_num:        headers = {            'token': token,            'Content-Type': 'application/json;charset=UTF-8'        }        try:            if data_rtn != None:                if req_type == "POST":                    values = json.dumps(data_rtn)                    # obj_log.info values                    req = requests.post(API_URL, data=values, headers=headers)                elif req_type == "PUT":                    # obj_log.info API_URL                    values = json.dumps(data_rtn)                    req = requests.put(API_URL, data=values, headers=headers,timeout=timeout)                elif req_type == "GET":                    # obj_log.info API_URL                    req = requests.get(API_URL, params=data_rtn, headers=headers,timeout=timeout)            else:                if req_type == "POST":                    values = json.dumps(data_rtn)                    req = requests.post(API_URL, headers=headers)                elif req_type == "PUT":                    # obj_log.info API_URL                    req = requests.put(API_URL, headers=headers,timeout=timeout)                elif req_type == "GET":                    obj_log.info(API_URL)                    req = requests.get(API_URL, headers=headers, timeout=timeout)        except Exception as e:            if get_err_msg == True:                try:                    return e.read()                except Exception:                    return e            continue        if str(req.status_code) == "200":            rtn_temp = req.text            # rtn_temp = str(rtn_temp)            # obj_log.info type(rtn_temp)            rtn = json.loads(rtn_temp)            req.close()            return rtn        else:            obj_log.error("ERROR : Failed to requests API!")            time.sleep(retry_interval_time)            cnt += 1            obj_log.error('retry: %d' % cnt)            req.close()    return False# test = call_rest_api(API_URL = "http://119.23.205.178/api/image/uploadImageSaveOrUpdate",  req_type='POST')# print testget_hallcode = requests.get("http://m.ytsg.cn/userApp/library/list?area=511502&lngLat=104.062145475855%2C30.5551793323977&locationCode=510107&pageCount=500&pageNo=1")rtn_temp = get_hallcode.textrtn = json.loads(rtn_temp)get_hallcode_temp = rtn['data']['resultList']list_hallcode = []no_book_hallcode = []for i in range(len(get_hallcode_temp)):    # unicode 反编译   	list_hallcode.append(get_hallcode_temp[i]['libCode'].encode('raw_unicode_escape'))print list_hallcodetime.sleep(2)for i in list_hallcode:    API_URL = "http://m.ytsg.cn/userApp/library/number?libCode=" + i    # print API_URL    req = requests.get(API_URL)    if req.status_code == 200:        rtn_temp = req.text        rtn = json.loads(rtn_temp)        if rtn['data']['bookNum'] == 0:			no_book_hallcode.append(i)print str(no_book_hallcode)